# -*- coding: utf-8 -*-
# Generated by Django 1.11b1 on 2017-03-17 23:05
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', models.SlugField(blank=True, max_length=150)),
                ('avatar', models.ImageField(blank=True, default='', upload_to='accounts/avatar', verbose_name='Avatar')),
                ('public_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Nombre a mostrar')),
                ('phone', models.CharField(blank=True, default='', max_length=30, verbose_name='Teléfono')),
                ('is_premium', models.BooleanField(default=False, verbose_name='¿Es cuenta Premium?')),
                ('anuncios_premium', models.IntegerField(default=0, verbose_name='Numero de anuncios Premium')),
                ('expire_premium_at', models.DateTimeField(blank=True, verbose_name='Fecha de expiración cuenta Premium')),
            ],
            options={
                'verbose_name_plural': 'Usuarios',
                'verbose_name': 'Usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('country', models.CharField(default='', max_length=100, verbose_name='País')),
                ('state', models.CharField(default='', max_length=100, verbose_name='Provincia')),
                ('city', models.CharField(default='', max_length=100, verbose_name='Población')),
                ('address', models.CharField(default='', max_length=200, verbose_name='Dirección')),
                ('zipcode', models.CharField(default='', max_length=100, verbose_name='Código postal')),
                ('location_string', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Location string')),
                ('latitude', models.FloatField(blank=True, default=0, verbose_name='Latitud')),
                ('longitude', models.FloatField(blank=True, default=0, verbose_name='Longitud')),
                ('radius', models.IntegerField(blank=True, null=True, verbose_name='Radius')),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Point')),
                ('polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326, verbose_name='Polígono')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_location', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Localización usuario')),
            ],
            options={
                'verbose_name_plural': 'Localizaciones de usuarios',
                'verbose_name': 'Localización de usuario',
            },
        ),
        migrations.CreateModel(
            name='UserOptions',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_options', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Opciones de usuario')),
                ('phone_public', models.BooleanField(default=False, verbose_name='Teléfono publico')),
                ('address_public', models.BooleanField(default=False, verbose_name='Dirección publica')),
                ('email_public', models.BooleanField(default=False, verbose_name='Email publico')),
                ('notify_precio_anuncio_baja', models.BooleanField(default=True, verbose_name='Notificar si el precio baja')),
            ],
            options={
                'verbose_name_plural': 'Opciones de usuarios',
                'verbose_name': 'Opciones de usuario',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
